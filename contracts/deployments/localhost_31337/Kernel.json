{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousGovernor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "GovernorshipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "ModuleAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        }
      ],
      "name": "ModuleCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "ModuleProposed",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "acceptProposedModule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_keys",
          "type": "bytes32[]"
        }
      ],
      "name": "acceptProposedModules",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "cancelProposedModule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newGovernor",
          "type": "address"
        }
      ],
      "name": "changeGovernor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "getModule",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_keys",
          "type": "bytes32[]"
        },
        {
          "internalType": "address[]",
          "name": "_addresses",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_governorAddr",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isGovernor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "moduleExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "modules",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "proposeModule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "proposedModules",
      "outputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "receipt": {
    "to": null,
    "from": "0xeAD9C93b79Ae7C1591b1FB5323BD777E86e150d4",
    "contractAddress": "0x3307C25998C69ec9c37C71D2D2e2dF837D254133",
    "transactionIndex": 0,
    "gasUsed": "1324438",
    "logsBloom": "0x
    "blockHash": "0x9d989a0eb45d6fc8aa39e74b8b183e6db07772f19828cc586f6ab13786580343",
    "transactionHash": "0x0829b257926e5daff0981354616e1a36baeb7bd54e98ddc91f0746c45b55cab1",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 20,
        "transactionHash": "0x0829b257926e5daff0981354616e1a36baeb7bd54e98ddc91f0746c45b55cab1",
        "address": "0x3307C25998C69ec9c37C71D2D2e2dF837D254133",
        "topics": [
          "0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000ead9c93b79ae7c1591b1fb5323bd777e86e150d4"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x9d989a0eb45d6fc8aa39e74b8b183e6db07772f19828cc586f6ab13786580343"
      }
    ],
    "blockNumber": 20,
    "cumulativeGasUsed": "1324438",
    "status": 1,
    "byzantium": true
  },
  "address": "0x3307C25998C69ec9c37C71D2D2e2dF837D254133",
  "args": [],
  "solcInputHash": "0x47011e52db3755fd60cff9cf1783bdc0f207ca25f1166040c4650acd34771fc6",
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousGovernor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"GovernorshipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"ModuleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"ModuleCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ModuleProposed\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"acceptProposedModule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_keys\",\"type\":\"bytes32[]\"}],\"name\":\"acceptProposedModules\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"cancelProposedModule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newGovernor\",\"type\":\"address\"}],\"name\":\"changeGovernor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getModule\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_keys\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_governorAddr\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isGovernor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"moduleExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"modules\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"proposeModule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"proposedModules\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"acceptProposedModule(bytes32)\":{\"details\":\"Accept and publish an already proposed module\",\"params\":{\"_key\":\"Key of the module\"}},\"acceptProposedModules(bytes32[])\":{\"details\":\"Accept and publish already proposed modules\",\"params\":{\"_keys\":\"Keys array of the modules\"}},\"cancelProposedModule(bytes32)\":{\"details\":\"Cancel a proposed module request\",\"params\":{\"_key\":\"Key of the module\"}},\"changeGovernor(address)\":{\"details\":\"Transfers Governance of the contract to a new account (`newGovernor`). Can only be called by the current Governor.\",\"params\":{\"_newGovernor\":\"Address of the new Governor\"}},\"getModule(bytes32)\":{\"details\":\"Get the module address\",\"params\":{\"_key\":\"Key of the module\"},\"return\":\"Return the address of the module\"},\"governor()\":{\"details\":\"Returns the address of the current Governor.\"},\"initialize(bytes32[],address[],address)\":{\"details\":\"Adds multiple new modules to the system to initialize the     Kernel contract with default modules. This should be called first     after deploying Kernel contract.\",\"params\":{\"_addresses\":\"Contract addresses of the new modules\",\"_keys\":\"Keys of the new modules in bytes32 form\"},\"return\":\"bool         Success of publishing new Modules\"},\"isGovernor()\":{\"details\":\"Returns true if the caller is the current Governor.\"},\"moduleExists(bytes32)\":{\"details\":\"Checks if a module exists\",\"params\":{\"_key\":\"Key of the module\"},\"return\":\"Returns 'true' when a module exists, otherwise 'false'\"},\"proposeModule(bytes32,address)\":{\"details\":\"Propose a new or update existing module\",\"params\":{\"_addr\":\"Address of the module\",\"_key\":\"Key of the module\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/kernel/Kernel.sol\":\"Kernel\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/governance/Governable.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @title   Governable\\n */\\ncontract Governable {\\n\\n    event GovernorshipTransferred(address indexed previousGovernor, address indexed newGovernor);\\n\\n    address private _governor;\\n\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial Governor.\\n     */\\n    constructor () internal {\\n        _governor = msg.sender;\\n        emit GovernorshipTransferred(address(0), _governor);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current Governor.\\n     */\\n    function governor() public view returns (address) {\\n        return _governor;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the Governor.\\n     */\\n    modifier onlyGovernor() {\\n        require(isGovernor(), \\\"Caller is not the Governor\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the caller is the current Governor.\\n     */\\n    function isGovernor() public view returns (bool) {\\n        return msg.sender == _governor;\\n    }\\n\\n    /**\\n     * @dev Transfers Governance of the contract to a new account (`newGovernor`).\\n     * Can only be called by the current Governor.\\n     * @param _newGovernor Address of the new Governor\\n     */\\n    function changeGovernor(address _newGovernor) external onlyGovernor {\\n        _changeGovernor(_newGovernor);\\n    }\\n\\n    /**\\n     * @dev Change Governance of the contract to a new account (`newGovernor`).\\n     * @param _newGovernor Address of the new Governor\\n     */\\n    function _changeGovernor(address _newGovernor) internal {\\n        require(_newGovernor != address(0), \\\"GOV: new Governor is address(0)\\\");\\n        emit GovernorshipTransferred(_governor, _newGovernor);\\n        _governor = _newGovernor;\\n    }\\n}\\n\",\"keccak256\":\"0x36c20b4b3c5b21447a375404f00399dab2c19857abdc94acb78fd411c45b3cdd\"},\"contracts/interfaces/IKernel.sol\":{\"content\":\"pragma solidity 0.5.16;\\n\\n/**\\n  * @title IKernel\\n  * @dev Basic interface for interacting with the Kernel\\n  */\\ninterface IKernel {\\n    function governor() external view returns (address);\\n    function getModule(bytes32 key) external view returns (address);\\n\\n    function proposeModule(bytes32 _key, address _addr) external;\\n    function cancelProposedModule(bytes32 _key) external;\\n    function acceptProposedModule(bytes32 _key) external;\\n    function acceptProposedModules(bytes32[] calldata _keys) external;\\n}\\n\",\"keccak256\":\"0xc7381f9a32f6bc5fd764affe01793b9086bdb8dccf4b40bca7a8d29f12671b40\"},\"contracts/kernel/Kernel.sol\":{\"content\":\"pragma solidity 0.5.16;\\n\\nimport { IKernel } from \\\"../interfaces/IKernel.sol\\\";\\nimport { Governable } from \\\"../governance/Governable.sol\\\";\\n\\ncontract Kernel is IKernel, Governable {\\n\\n    event ModuleProposed(bytes32 indexed key, address addr, uint256 timestamp);\\n    event ModuleAdded(bytes32 indexed key, address addr);\\n    event ModuleCancelled(bytes32 indexed key);\\n\\n    /** @dev Struct to store information about current modules */\\n    struct Module {\\n        address addr;       // Module address\\n    }\\n\\n    /** @dev Struct to store information about proposed modules */\\n    struct Proposal {\\n        address newAddress; // Proposed Module address\\n        uint256 timestamp;  // Timestamp when module upgrade was proposed\\n    }\\n\\n    // Module-key => Module\\n    mapping(bytes32 => Module) public modules;\\n    // Module-address => Module-key\\n    mapping(address => bytes32) private addressToModule;\\n    // Module-key => Proposal\\n    mapping(bytes32 => Proposal) public proposedModules;\\n\\n    // Init flag to allow add modules at the time of deplyment without delay\\n    bool public initialized = false;\\n\\n    /**\\n     * @dev Modifier allows functions calls only when contract is not initialized.\\n     */\\n    modifier whenNotInitialized() {\\n        require(!initialized, \\\"Kernel is already initialized\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Adds multiple new modules to the system to initialize the\\n     *      Kernel contract with default modules. This should be called first\\n     *      after deploying Kernel contract.\\n     * @param _keys         Keys of the new modules in bytes32 form\\n     * @param _addresses    Contract addresses of the new modules\\n     * @return bool         Success of publishing new Modules\\n     */\\n    function initialize(\\n        bytes32[] calldata _keys,\\n        address[] calldata _addresses,\\n        address _governorAddr\\n    )\\n        external\\n        onlyGovernor\\n        whenNotInitialized\\n        returns (bool)\\n    {\\n        uint256 len = _keys.length;\\n        require(len > 0, \\\"No keys provided\\\");\\n        require(len == _addresses.length, \\\"Insufficient address data\\\");\\n\\n        for(uint256 i = 0 ; i < len; i++) {\\n            _publishModule(_keys[i], _addresses[i]);\\n        }\\n\\n        if(_governorAddr != governor()) _changeGovernor(_governorAddr);\\n\\n        initialized = true;\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Propose a new or update existing module\\n     * @param _key  Key of the module\\n     * @param _addr Address of the module\\n     */\\n    function proposeModule(bytes32 _key, address _addr)\\n        external\\n        onlyGovernor\\n    {\\n        require(_key != bytes32(0x0), \\\"Key must not be zero\\\");\\n        require(_addr != address(0), \\\"Module address must not be 0\\\");\\n        require(modules[_key].addr != _addr, \\\"Module already has same address\\\");\\n        Proposal storage p = proposedModules[_key];\\n        require(p.timestamp == 0, \\\"Module already proposed\\\");\\n\\n        p.newAddress = _addr;\\n        p.timestamp = now;\\n        emit ModuleProposed(_key, _addr, now);\\n    }\\n\\n    /**\\n     * @dev Cancel a proposed module request\\n     * @param _key Key of the module\\n     */\\n    function cancelProposedModule(bytes32 _key)\\n        external\\n        onlyGovernor\\n    {\\n        uint256 timestamp = proposedModules[_key].timestamp;\\n        require(timestamp > 0, \\\"Proposed module not found\\\");\\n\\n        delete proposedModules[_key];\\n        emit ModuleCancelled(_key);\\n    }\\n\\n    /**\\n     * @dev Accept and publish an already proposed module\\n     * @param _key Key of the module\\n     */\\n    function acceptProposedModule(bytes32 _key)\\n        external\\n        onlyGovernor\\n    {\\n        _acceptProposedModule(_key);\\n    }\\n\\n    /**\\n     * @dev Accept and publish already proposed modules\\n     * @param _keys Keys array of the modules\\n     */\\n    function acceptProposedModules(bytes32[] calldata _keys)\\n        external\\n        onlyGovernor\\n    {\\n        uint256 len = _keys.length;\\n        require(len > 0, \\\"Keys array empty\\\");\\n\\n        for(uint256 i = 0 ; i < len; i++) {\\n            _acceptProposedModule(_keys[i]);\\n        }\\n    }\\n\\n    /**\\n     * @dev Accept a proposed module\\n     * @param _key Key of the module\\n     */\\n    function _acceptProposedModule(bytes32 _key) internal {\\n        Proposal memory p = proposedModules[_key];\\n\\n        delete proposedModules[_key];\\n        _publishModule(_key, p.newAddress);\\n    }\\n\\n    /**\\n     * @dev Internal func to publish a module to kernel\\n     * @param _key      Key of the new module in bytes32 form\\n     * @param _addr     Contract address of the new module\\n     */\\n    function _publishModule(bytes32 _key, address _addr) internal {\\n        require(addressToModule[_addr] == bytes32(0x0), \\\"Modules must have unique address\\\");\\n        // Old no longer points to a moduleAddress\\n        address oldModuleAddr = modules[_key].addr;\\n        if(oldModuleAddr != address(0x0)) {\\n            addressToModule[oldModuleAddr] = bytes32(0x0);\\n        }\\n        modules[_key].addr = _addr;\\n        addressToModule[_addr] = _key;\\n        emit ModuleAdded(_key, _addr);\\n    }\\n\\n    /**\\n     * @dev Checks if a module exists\\n     * @param _key  Key of the module\\n     * @return      Returns 'true' when a module exists, otherwise 'false'\\n     */\\n    function moduleExists(bytes32 _key) public view returns (bool) {\\n        if(_key != 0 && modules[_key].addr != address(0))\\n            return true;\\n        return false;\\n    }\\n\\n    /**\\n     * @dev Get the module address\\n     * @param _key  Key of the module\\n     * @return      Return the address of the module\\n     */\\n    function getModule(bytes32 _key) external view returns (address addr) {\\n        addr = modules[_key].addr;\\n    }\\n}\\n\",\"keccak256\":\"0xb0b41863c256a60a4a41b2872654ac29d6e544a6249603f4636ec3486d146baf\"}},\"version\":1}",
  "bytecode": "0x60806040526000600460006101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a60405160405180910390a361169f806100ea6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806385acd6411161008c578063c7af335211610066578063c7af3352146103cc578063d5964e4d146103ee578063d7e0842a146104f4578063e4c0aaf414610522576100cf565b806385acd641146102aa57806394ccb13714610318578063b0b6cc1a1461035e576100cf565b806309ea14aa146100d45780630c340a2414610122578063158ef93e1461016c57806328066b861461018e5780636921ea41146101bc5780636a89934b14610235575b600080fd5b610120600480360360408110156100ea57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610566565b005b61012a610922565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61017461094b565b604051808215151515815260200191505060405180910390f35b6101ba600480360360208110156101a457600080fd5b810190808035906020019092919050505061095e565b005b610233600480360360208110156101d257600080fd5b81019080803590602001906401000000008111156101ef57600080fd5b82018360208201111561020157600080fd5b8035906020019184602083028401116401000000008311171561022357600080fd5b90919293919293905050506109e4565b005b6102616004803603602081101561024b57600080fd5b8101908080359060200190929190505050610b18565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b6102d6600480360360208110156102c057600080fd5b8101908080359060200190929190505050610b5c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103446004803603602081101561032e57600080fd5b8101908080359060200190929190505050610b9c565b604051808215151515815260200191505060405180910390f35b61038a6004803603602081101561037457600080fd5b8101908080359060200190929190505050610c2c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103d4610c6a565b604051808215151515815260200191505060405180910390f35b6104da6004803603606081101561040457600080fd5b810190808035906020019064010000000081111561042157600080fd5b82018360208201111561043357600080fd5b8035906020019184602083028401116401000000008311171561045557600080fd5b90919293919293908035906020019064010000000081111561047657600080fd5b82018360208201111561048857600080fd5b803590602001918460208302840111640100000000831117156104aa57600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cc1565b604051808215151515815260200191505060405180910390f35b6105206004803603602081101561050a57600080fd5b8101908080359060200190929190505050610f83565b005b6105646004803603602081101561053857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611104565b005b61056e610c6a565b6105e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f43616c6c6572206973206e6f742074686520476f7665726e6f7200000000000081525060200191505060405180910390fd5b6000801b821415610659576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4b6579206d757374206e6f74206265207a65726f00000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4d6f64756c652061646472657373206d757374206e6f7420626520300000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156107d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4d6f64756c6520616c7265616479206861732073616d6520616464726573730081525060200191505060405180910390fd5b60006003600084815260200190815260200160002090506000816001015414610865576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f4d6f64756c6520616c72656164792070726f706f73656400000000000000000081525060200191505060405180910390fd5b818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550428160010181905550827fa5917e6bf5563219e2772cffe6989d6f2ef8235ab280ab88f8c37479562e58a38342604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a2505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900460ff1681565b610966610c6a565b6109d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f43616c6c6572206973206e6f742074686520476f7665726e6f7200000000000081525060200191505060405180910390fd5b6109e18161118a565b50565b6109ec610c6a565b610a5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f43616c6c6572206973206e6f742074686520476f7665726e6f7200000000000081525060200191505060405180910390fd5b600082829050905060008111610adc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4b65797320617272617920656d7074790000000000000000000000000000000081525060200191505060405180910390fd5b60008090505b81811015610b1257610b05848483818110610af957fe5b9050602002013561118a565b8080600101915050610ae2565b50505050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60006001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008060001b8214158015610c145750600073ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b15610c225760019050610c27565b600090505b919050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000610ccb610c6a565b610d3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f43616c6c6572206973206e6f742074686520476f7665726e6f7200000000000081525060200191505060405180910390fd5b600460009054906101000a900460ff1615610dc0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4b65726e656c20697320616c726561647920696e697469616c697a656400000081525060200191505060405180910390fd5b600086869050905060008111610e3e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f206b6579732070726f76696465640000000000000000000000000000000081525060200191505060405180910390fd5b848490508114610eb6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f496e73756666696369656e74206164647265737320646174610000000000000081525060200191505060405180910390fd5b60008090505b81811015610f1557610f08888883818110610ed357fe5b90506020020135878784818110610ee657fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16611269565b8080600101915050610ebc565b50610f1e610922565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610f5a57610f59836114d9565b5b6001600460006101000a81548160ff021916908315150217905550600191505095945050505050565b610f8b610c6a565b610ffd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f43616c6c6572206973206e6f742074686520476f7665726e6f7200000000000081525060200191505060405180910390fd5b6000600360008381526020019081526020016000206001015490506000811161108e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f50726f706f736564206d6f64756c65206e6f7420666f756e640000000000000081525060200191505060405180910390fd5b60036000838152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090555050817f4dd889c845f5a942b8304764283938168000b8f4903940690beb685ca2fc16cc60405160405180910390a25050565b61110c610c6a565b61117e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f43616c6c6572206973206e6f742074686520476f7665726e6f7200000000000081525060200191505060405180910390fd5b611187816114d9565b50565b61119261163a565b600360008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050905060036000838152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090555050611265828260000151611269565b5050565b6000801b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611320576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4d6f64756c6573206d757374206861766520756e69717565206164647265737381525060200191505060405180910390fd5b60006001600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146113d7576000801b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b816001600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550827ff14475b19484bf096265507cc0c41cd3bf1994992088806830686e2d7272271983604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a2505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561157c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f474f563a206e657720476f7665726e6f7220697320616464726573732830290081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a60405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152509056fea265627a7a723158201172aa56086d5ff678f73e06af4bc5de97b8eebd00dd432837dcfbc84c70b3ce64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806385acd6411161008c578063c7af335211610066578063c7af3352146103cc578063d5964e4d146103ee578063d7e0842a146104f4578063e4c0aaf414610522576100cf565b806385acd641146102aa57806394ccb13714610318578063b0b6cc1a1461035e576100cf565b806309ea14aa146100d45780630c340a2414610122578063158ef93e1461016c57806328066b861461018e5780636921ea41146101bc5780636a89934b14610235575b600080fd5b610120600480360360408110156100ea57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610566565b005b61012a610922565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61017461094b565b604051808215151515815260200191505060405180910390f35b6101ba600480360360208110156101a457600080fd5b810190808035906020019092919050505061095e565b005b610233600480360360208110156101d257600080fd5b81019080803590602001906401000000008111156101ef57600080fd5b82018360208201111561020157600080fd5b8035906020019184602083028401116401000000008311171561022357600080fd5b90919293919293905050506109e4565b005b6102616004803603602081101561024b57600080fd5b8101908080359060200190929190505050610b18565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b6102d6600480360360208110156102c057600080fd5b8101908080359060200190929190505050610b5c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103446004803603602081101561032e57600080fd5b8101908080359060200190929190505050610b9c565b604051808215151515815260200191505060405180910390f35b61038a6004803603602081101561037457600080fd5b8101908080359060200190929190505050610c2c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103d4610c6a565b604051808215151515815260200191505060405180910390f35b6104da6004803603606081101561040457600080fd5b810190808035906020019064010000000081111561042157600080fd5b82018360208201111561043357600080fd5b8035906020019184602083028401116401000000008311171561045557600080fd5b90919293919293908035906020019064010000000081111561047657600080fd5b82018360208201111561048857600080fd5b803590602001918460208302840111640100000000831117156104aa57600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cc1565b604051808215151515815260200191505060405180910390f35b6105206004803603602081101561050a57600080fd5b8101908080359060200190929190505050610f83565b005b6105646004803603602081101561053857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611104565b005b61056e610c6a565b6105e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f43616c6c6572206973206e6f742074686520476f7665726e6f7200000000000081525060200191505060405180910390fd5b6000801b821415610659576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4b6579206d757374206e6f74206265207a65726f00000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4d6f64756c652061646472657373206d757374206e6f7420626520300000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156107d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4d6f64756c6520616c7265616479206861732073616d6520616464726573730081525060200191505060405180910390fd5b60006003600084815260200190815260200160002090506000816001015414610865576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f4d6f64756c6520616c72656164792070726f706f73656400000000000000000081525060200191505060405180910390fd5b818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550428160010181905550827fa5917e6bf5563219e2772cffe6989d6f2ef8235ab280ab88f8c37479562e58a38342604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a2505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900460ff1681565b610966610c6a565b6109d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f43616c6c6572206973206e6f742074686520476f7665726e6f7200000000000081525060200191505060405180910390fd5b6109e18161118a565b50565b6109ec610c6a565b610a5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f43616c6c6572206973206e6f742074686520476f7665726e6f7200000000000081525060200191505060405180910390fd5b600082829050905060008111610adc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4b65797320617272617920656d7074790000000000000000000000000000000081525060200191505060405180910390fd5b60008090505b81811015610b1257610b05848483818110610af957fe5b9050602002013561118a565b8080600101915050610ae2565b50505050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60006001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008060001b8214158015610c145750600073ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b15610c225760019050610c27565b600090505b919050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000610ccb610c6a565b610d3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f43616c6c6572206973206e6f742074686520476f7665726e6f7200000000000081525060200191505060405180910390fd5b600460009054906101000a900460ff1615610dc0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4b65726e656c20697320616c726561647920696e697469616c697a656400000081525060200191505060405180910390fd5b600086869050905060008111610e3e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f206b6579732070726f76696465640000000000000000000000000000000081525060200191505060405180910390fd5b848490508114610eb6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f496e73756666696369656e74206164647265737320646174610000000000000081525060200191505060405180910390fd5b60008090505b81811015610f1557610f08888883818110610ed357fe5b90506020020135878784818110610ee657fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16611269565b8080600101915050610ebc565b50610f1e610922565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610f5a57610f59836114d9565b5b6001600460006101000a81548160ff021916908315150217905550600191505095945050505050565b610f8b610c6a565b610ffd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f43616c6c6572206973206e6f742074686520476f7665726e6f7200000000000081525060200191505060405180910390fd5b6000600360008381526020019081526020016000206001015490506000811161108e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f50726f706f736564206d6f64756c65206e6f7420666f756e640000000000000081525060200191505060405180910390fd5b60036000838152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090555050817f4dd889c845f5a942b8304764283938168000b8f4903940690beb685ca2fc16cc60405160405180910390a25050565b61110c610c6a565b61117e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f43616c6c6572206973206e6f742074686520476f7665726e6f7200000000000081525060200191505060405180910390fd5b611187816114d9565b50565b61119261163a565b600360008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050905060036000838152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090555050611265828260000151611269565b5050565b6000801b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611320576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4d6f64756c6573206d757374206861766520756e69717565206164647265737381525060200191505060405180910390fd5b60006001600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146113d7576000801b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b816001600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550827ff14475b19484bf096265507cc0c41cd3bf1994992088806830686e2d7272271983604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a2505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561157c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f474f563a206e657720476f7665726e6f7220697320616464726573732830290081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a60405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152509056fea265627a7a723158201172aa56086d5ff678f73e06af4bc5de97b8eebd00dd432837dcfbc84c70b3ce64736f6c63430005100032",
  "devdoc": {
    "methods": {
      "acceptProposedModule(bytes32)": {
        "details": "Accept and publish an already proposed module",
        "params": {
          "_key": "Key of the module"
        }
      },
      "acceptProposedModules(bytes32[])": {
        "details": "Accept and publish already proposed modules",
        "params": {
          "_keys": "Keys array of the modules"
        }
      },
      "cancelProposedModule(bytes32)": {
        "details": "Cancel a proposed module request",
        "params": {
          "_key": "Key of the module"
        }
      },
      "changeGovernor(address)": {
        "details": "Transfers Governance of the contract to a new account (`newGovernor`). Can only be called by the current Governor.",
        "params": {
          "_newGovernor": "Address of the new Governor"
        }
      },
      "getModule(bytes32)": {
        "details": "Get the module address",
        "params": {
          "_key": "Key of the module"
        },
        "return": "Return the address of the module"
      },
      "governor()": {
        "details": "Returns the address of the current Governor."
      },
      "initialize(bytes32[],address[],address)": {
        "details": "Adds multiple new modules to the system to initialize the     Kernel contract with default modules. This should be called first     after deploying Kernel contract.",
        "params": {
          "_addresses": "Contract addresses of the new modules",
          "_keys": "Keys of the new modules in bytes32 form"
        },
        "return": "bool         Success of publishing new Modules"
      },
      "isGovernor()": {
        "details": "Returns true if the caller is the current Governor."
      },
      "moduleExists(bytes32)": {
        "details": "Checks if a module exists",
        "params": {
          "_key": "Key of the module"
        },
        "return": "Returns 'true' when a module exists, otherwise 'false'"
      },
      "proposeModule(bytes32,address)": {
        "details": "Propose a new or update existing module",
        "params": {
          "_addr": "Address of the module",
          "_key": "Key of the module"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9127,
        "contract": "contracts/kernel/Kernel.sol:Kernel",
        "label": "_governor",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9287,
        "contract": "contracts/kernel/Kernel.sol:Kernel",
        "label": "modules",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(Module)9278_storage)"
      },
      {
        "astId": 9291,
        "contract": "contracts/kernel/Kernel.sol:Kernel",
        "label": "addressToModule",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bytes32)"
      },
      {
        "astId": 9295,
        "contract": "contracts/kernel/Kernel.sol:Kernel",
        "label": "proposedModules",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_bytes32,t_struct(Proposal)9283_storage)"
      },
      {
        "astId": 9298,
        "contract": "contracts/kernel/Kernel.sol:Kernel",
        "label": "initialized",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_mapping(t_bytes32,t_struct(Module)9278_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct Kernel.Module)",
        "numberOfBytes": "32",
        "value": "t_struct(Module)9278_storage"
      },
      "t_mapping(t_bytes32,t_struct(Proposal)9283_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct Kernel.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)9283_storage"
      },
      "t_struct(Module)9278_storage": {
        "encoding": "inplace",
        "label": "struct Kernel.Module",
        "members": [
          {
            "astId": 9277,
            "contract": "contracts/kernel/Kernel.sol:Kernel",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)9283_storage": {
        "encoding": "inplace",
        "label": "struct Kernel.Proposal",
        "members": [
          {
            "astId": 9280,
            "contract": "contracts/kernel/Kernel.sol:Kernel",
            "label": "newAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 9282,
            "contract": "contracts/kernel/Kernel.sol:Kernel",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "gasEstimates": {
    "creation": {
      "codeDepositCost": "1158200",
      "executionCost": "45290",
      "totalCost": "1203490"
    },
    "external": {
      "acceptProposedModule(bytes32)": "78630",
      "acceptProposedModules(bytes32[])": "infinite",
      "cancelProposedModule(bytes32)": "29225",
      "changeGovernor(address)": "24542",
      "getModule(bytes32)": "1255",
      "governor()": "1084",
      "initialize(bytes32[],address[],address)": "infinite",
      "initialized()": "1098",
      "isGovernor()": "1100",
      "moduleExists(bytes32)": "1369",
      "modules(bytes32)": "1292",
      "proposeModule(bytes32,address)": "45744",
      "proposedModules(bytes32)": "2168"
    },
    "internal": {
      "_acceptProposedModule(bytes32)": "infinite",
      "_publishModule(bytes32,address)": "infinite"
    }
  }
}