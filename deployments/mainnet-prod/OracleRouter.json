{
  "address": "0x3091Cb4e69155B9f768Ae624C9f9a4209333b07E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x566ee8aeb805febec9936db5696464890158485ca9849432a893925036eeb7b9",
  "receipt": {
    "to": null,
    "from": "0xFF1AE57723A4d6d5301e4C7145eF5E9e51901fdc",
    "contractAddress": "0x3091Cb4e69155B9f768Ae624C9f9a4209333b07E",
    "transactionIndex": 0,
    "gasUsed": "473384",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x6e30de5ca6a6a8a9269d6b9cbfb9c01395b046e4ea66b90c53ac7361cfb974ba",
    "transactionHash": "0x566ee8aeb805febec9936db5696464890158485ca9849432a893925036eeb7b9",
    "logs": [],
    "blockNumber": 12626318,
    "cumulativeGasUsed": "473384",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 4,
  "solcInputHash": "021a00eddc14dea9f9ea2b429166a97e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"price(address)\":{\"params\":{\"asset\":\"address of the asset\"},\"returns\":{\"_0\":\"uint256 USD price of 1 of the asset, in 8 decimal fixed\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"price(address)\":{\"notice\":\"Returns the total price in 8 digit USD for a given asset.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracle/OracleRouter.sol\":\"OracleRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBasicToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\ninterface IBasicToken {\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xcabd808c03076fa6fb5838a13210b2b99314d23842e0e3d5e55e0c1466e75212\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\ninterface IOracle {\\n    /**\\n     * @dev returns the asset price in USD, 8 decimal digits.\\n     */\\n    function price(address asset) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x595ee808ea4eb2e36362c0e46e85e4f923e673a6eb17fe7efad1c8d77d41d09d\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/chainlink/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n    function decimals() external view returns (uint8);\\n\\n    function description() external view returns (string memory);\\n\\n    function version() external view returns (uint256);\\n\\n    // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n    // if they do not have data to report, instead of returning unset values\\n    // which could be misinterpreted as actual reported values.\\n    function getRoundData(uint80 _roundId)\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\",\"keccak256\":\"0x6194c60f3343140b13e867d59b1b00d042dc4149cb5a18f03b3d7cb3adb7127e\",\"license\":\"agpl-3.0\"},\"contracts/oracle/OracleRouter.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/chainlink/AggregatorV3Interface.sol\\\";\\nimport { IOracle } from \\\"../interfaces/IOracle.sol\\\";\\nimport { Helpers } from \\\"../utils/Helpers.sol\\\";\\n\\nabstract contract OracleRouterBase is IOracle {\\n    uint256 constant MIN_DRIFT = uint256(70000000);\\n    uint256 constant MAX_DRIFT = uint256(130000000);\\n\\n    /**\\n     * @dev The price feed contract to use for a particular asset.\\n     * @param asset address of the asset\\n     * @return address address of the price feed for the asset\\n     */\\n    function feed(address asset) internal view virtual returns (address);\\n\\n    /**\\n     * @notice Returns the total price in 8 digit USD for a given asset.\\n     * @param asset address of the asset\\n     * @return uint256 USD price of 1 of the asset, in 8 decimal fixed\\n     */\\n    function price(address asset) external view override returns (uint256) {\\n        address _feed = feed(asset);\\n\\n        require(_feed != address(0), \\\"Asset not available\\\");\\n        (, int256 _iprice, , , ) = AggregatorV3Interface(_feed)\\n            .latestRoundData();\\n        uint256 _price = uint256(_iprice);\\n        if (isStablecoin(asset)) {\\n            require(_price <= MAX_DRIFT, \\\"Oracle: Price exceeds max\\\");\\n            require(_price >= MIN_DRIFT, \\\"Oracle: Price under min\\\");\\n        }\\n        return uint256(_price);\\n    }\\n\\n    function isStablecoin(address _asset) internal view returns (bool) {\\n        string memory symbol = Helpers.getSymbol(_asset);\\n        bytes32 symbolHash = keccak256(abi.encodePacked(symbol));\\n        return\\n            symbolHash == keccak256(abi.encodePacked(\\\"DAI.e\\\")) ||\\n            symbolHash == keccak256(abi.encodePacked(\\\"USDC.e\\\")) ||\\n            symbolHash == keccak256(abi.encodePacked(\\\"USDC\\\")) ||\\n            symbolHash == keccak256(abi.encodePacked(\\\"USDT.e\\\")) ||\\n            symbolHash == keccak256(abi.encodePacked(\\\"USDT\\\"));\\n    }\\n}\\n\\ncontract OracleRouter is OracleRouterBase {\\n    /**\\n     * @dev The price feed contract to use for a particular asset.\\n     * @param asset address of the asset\\n     */\\n    function feed(address asset) internal pure override returns (address) {\\n        // DAI\\n        if (asset == address(0xd586E7F844cEa2F87f50152665BCbc2C279D8d70)) {\\n            // Chainlink: DAI/USD\\n            return address(0x51D7180edA2260cc4F6e4EebB82FEF5c3c2B8300);\\n        } else if (\\n            // USDCe\\n            asset == address(0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664) ||\\n            // USDC\\n            asset == address(0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E)\\n        ) {\\n            // Chainlink: USDC/USD\\n            return address(0xF096872672F44d6EBA71458D74fe67F9a77a23B9);\\n        } else if (\\n            // USDTe\\n            asset == address(0xc7198437980c041c805A1EDcbA50c1Ce5db95118) ||\\n            // USDT\\n            asset == address(0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7)\\n        ) {\\n            // Chainlink: USDT/USD\\n            return address(0xEBE676ee90Fe1112671f19b6B7459bC678B67e8a);\\n        } else if (\\n            // WAVAX\\n            asset == address(0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7)\\n        ) {\\n            // Chainlink: WAVAX/USD\\n            return address(0x0A77230d17318075983913bC2145DB16C7366156);\\n        } else if (\\n            // ALPHAe\\n            asset == address(0x2147EFFF675e4A4eE1C2f918d181cDBd7a8E208f)\\n        ) {\\n            // Chainlink: ALPHA/USD\\n            return address(0x7B0ca9A6D03FE0467A31Ca850f5bcA51e027B3aF);\\n        } else if (\\n            // CRVe\\n            asset == address(0x249848BeCA43aC405b8102Ec90Dd5F22CA513c06)\\n        ) {\\n            // Chainlink: CRVe/USD\\n            return address(0x7CF8A6090A9053B01F3DF4D4e6CfEdd8c90d9027);\\n        } else {\\n            revert(\\\"Asset not available\\\");\\n        }\\n    }\\n}\\n\\ncontract OracleRouterTestnet is OracleRouterBase {\\n    /**\\n     * @dev The price feed contract to use for a particular asset. Testnet hacks.\\n     * @param asset address of the asset\\n     */\\n    function feed(address asset) internal pure override returns (address) {\\n        // DAI\\n        if (asset == address(0x51BC2DfB9D12d9dB50C855A5330fBA0faF761D15)) {\\n            // Chainlink: USDT/USD ~1\\n            return address(0x7898AcCC83587C3C55116c5230C17a6Cd9C71bad);\\n        } else if (\\n            // rando USDC\\n            asset == address(0x3a9fC2533eaFd09Bc5C36A7D6fdd0C664C81d659)\\n        ) {\\n            // Chainlink: USDT/USD ~1\\n            return address(0x7898AcCC83587C3C55116c5230C17a6Cd9C71bad);\\n        } else if (\\n            // USDTe\\n            asset == address(0x02823f9B469960Bb3b1de0B3746D4b95B7E35543)\\n        ) {\\n            // Chainlink: USDT/USD ~1\\n            return address(0x7898AcCC83587C3C55116c5230C17a6Cd9C71bad);\\n        } else if (\\n            // WAVAX\\n            asset == address(0xd00ae08403B9bbb9124bB305C09058E32C39A48c)\\n        ) {\\n            // Chainlink: WAVAX/USD\\n            return address(0x5498BB86BC934c8D34FDA08E81D444153d0D06aD);\\n        } else if (\\n            // CRVe\\n            asset == address(0x249848BeCA43aC405b8102Ec90Dd5F22CA513c06)\\n        ) {\\n            // Chainlink: CRV/USD\\n            return address(0x7CF8A6090A9053B01F3DF4D4e6CfEdd8c90d9027);\\n        } else {\\n            revert(\\\"Asset not available\\\");\\n        }\\n    }\\n}\\n\\ncontract OracleRouterDev is OracleRouterBase {\\n    mapping(address => address) public assetToFeed;\\n\\n    function setFeed(address _asset, address _feed) external {\\n        assetToFeed[_asset] = _feed;\\n    }\\n\\n    /**\\n     * @dev The price feed contract to use for a particular asset.\\n     * @param asset address of the asset\\n     */\\n    function feed(address asset) internal view override returns (address) {\\n        return assetToFeed[asset];\\n    }\\n}\\n\",\"keccak256\":\"0x7178e6df762317f9f65f67e5792fbbc699f7a47eda9ecc7ca05d0d4386ad876e\",\"license\":\"agpl-3.0\"},\"contracts/utils/Helpers.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\nimport { IBasicToken } from \\\"../interfaces/IBasicToken.sol\\\";\\n\\nlibrary Helpers {\\n    /**\\n     * @notice Fetch the `symbol()` from an ERC20 token\\n     * @dev Grabs the `symbol()` from a contract\\n     * @param _token Address of the ERC20 token\\n     * @return string Symbol of the ERC20 token\\n     */\\n    function getSymbol(address _token) internal view returns (string memory) {\\n        string memory symbol = IBasicToken(_token).symbol();\\n        return symbol;\\n    }\\n\\n    /**\\n     * @notice Fetch the `decimals()` from an ERC20 token\\n     * @dev Grabs the `decimals()` from a contract and fails if\\n     *      the decimal value does not live within a certain range\\n     * @param _token Address of the ERC20 token\\n     * @return uint256 Decimals of the ERC20 token\\n     */\\n    function getDecimals(address _token) internal view returns (uint256) {\\n        uint256 decimals = IBasicToken(_token).decimals();\\n        require(\\n            decimals >= 4 && decimals <= 18,\\n            \\\"Token must have sufficient decimal places\\\"\\n        );\\n\\n        return decimals;\\n    }\\n}\\n\",\"keccak256\":\"0x7ce41c7eacd2b6722029bd87759fe6e4d9b48a862277707737be82c94581b855\",\"license\":\"agpl-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061079a806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063aea9107814610030575b600080fd5b61004361003e3660046105dc565b610055565b60405190815260200160405180910390f35b600080610061836101f0565b90506001600160a01b0381166100b45760405162461bcd60e51b81526020600482015260136024820152724173736574206e6f7420617661696c61626c6560681b60448201526064015b60405180910390fd5b6000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100ef57600080fd5b505afa158015610103573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012791906106b2565b505050915050600081905061013b85610403565b156101e8576307bfa4808111156101945760405162461bcd60e51b815260206004820152601960248201527f4f7261636c653a2050726963652065786365656473206d61780000000000000060448201526064016100ab565b63042c1d808110156101e85760405162461bcd60e51b815260206004820152601760248201527f4f7261636c653a20507269636520756e646572206d696e00000000000000000060448201526064016100ab565b949350505050565b60006001600160a01b03821673d586e7f844cea2f87f50152665bcbc2c279d8d70141561023257507351d7180eda2260cc4f6e4eebb82fef5c3c2b8300919050565b6001600160a01b03821673a7d7079b0fead91f3e65f86e8915cb59c1a4c664148061027957506001600160a01b03821673b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e145b15610299575073f096872672f44d6eba71458d74fe67f9a77a23b9919050565b6001600160a01b03821673c7198437980c041c805a1edcba50c1ce5db9511814806102e057506001600160a01b038216739702230a8ea53601f5cd2dc00fdbc13d4df4a8c7145b15610300575073ebe676ee90fe1112671f19b6b7459bc678b67e8a919050565b6001600160a01b03821673b31f66aa3c1e785363f0875a1b74e27b85fd66c714156103405750730a77230d17318075983913bc2145db16c7366156919050565b6001600160a01b038216732147efff675e4a4ee1c2f918d181cdbd7a8e208f14156103805750737b0ca9a6d03fe0467a31ca850f5bca51e027b3af919050565b6001600160a01b03821673249848beca43ac405b8102ec90dd5f22ca513c0614156103c05750737cf8a6090a9053b01f3df4d4e6cfedd8c90d9027919050565b60405162461bcd60e51b81526020600482015260136024820152724173736574206e6f7420617661696c61626c6560681b60448201526064016100ab565b919050565b60008061040f83610542565b90506000816040516020016104249190610702565b60405160208183030381529060405280519060200120905060405160200161045790644441492e6560d81b815260050190565b604051602081830303815290604052805190602001208114806104a3575060405165555344432e6560d01b60208201526026016040516020818303038152906040528051906020012081145b806104d55750604051635553444360e01b60208201526024016040516020818303038152906040528051906020012081145b80610509575060405165555344542e6560d01b60208201526026016040516020818303038152906040528051906020012081145b806101e85750604051631554d11560e21b6020820152602401604051602081830303815290604052805190602001208114949350505050565b60606000826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561057f57600080fd5b505afa158015610593573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105bb9190810190610605565b9392505050565b805169ffffffffffffffffffff811681146103fe57600080fd5b6000602082840312156105ee57600080fd5b81356001600160a01b03811681146105bb57600080fd5b60006020828403121561061757600080fd5b815167ffffffffffffffff8082111561062f57600080fd5b818401915084601f83011261064357600080fd5b8151818111156106555761065561074e565b604051601f8201601f19908116603f0116810190838211818310171561067d5761067d61074e565b8160405282815287602084870101111561069657600080fd5b6106a783602083016020880161071e565b979650505050505050565b600080600080600060a086880312156106ca57600080fd5b6106d3866105c2565b94506020860151935060408601519250606086015191506106f6608087016105c2565b90509295509295909350565b6000825161071481846020870161071e565b9190910192915050565b60005b83811015610739578181015183820152602001610721565b83811115610748576000848401525b50505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220bcb127954ea9ada2e2584387e71443dceddd37d949aacc86fd888869d655ef3364736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063aea9107814610030575b600080fd5b61004361003e3660046105dc565b610055565b60405190815260200160405180910390f35b600080610061836101f0565b90506001600160a01b0381166100b45760405162461bcd60e51b81526020600482015260136024820152724173736574206e6f7420617661696c61626c6560681b60448201526064015b60405180910390fd5b6000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100ef57600080fd5b505afa158015610103573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012791906106b2565b505050915050600081905061013b85610403565b156101e8576307bfa4808111156101945760405162461bcd60e51b815260206004820152601960248201527f4f7261636c653a2050726963652065786365656473206d61780000000000000060448201526064016100ab565b63042c1d808110156101e85760405162461bcd60e51b815260206004820152601760248201527f4f7261636c653a20507269636520756e646572206d696e00000000000000000060448201526064016100ab565b949350505050565b60006001600160a01b03821673d586e7f844cea2f87f50152665bcbc2c279d8d70141561023257507351d7180eda2260cc4f6e4eebb82fef5c3c2b8300919050565b6001600160a01b03821673a7d7079b0fead91f3e65f86e8915cb59c1a4c664148061027957506001600160a01b03821673b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e145b15610299575073f096872672f44d6eba71458d74fe67f9a77a23b9919050565b6001600160a01b03821673c7198437980c041c805a1edcba50c1ce5db9511814806102e057506001600160a01b038216739702230a8ea53601f5cd2dc00fdbc13d4df4a8c7145b15610300575073ebe676ee90fe1112671f19b6b7459bc678b67e8a919050565b6001600160a01b03821673b31f66aa3c1e785363f0875a1b74e27b85fd66c714156103405750730a77230d17318075983913bc2145db16c7366156919050565b6001600160a01b038216732147efff675e4a4ee1c2f918d181cdbd7a8e208f14156103805750737b0ca9a6d03fe0467a31ca850f5bca51e027b3af919050565b6001600160a01b03821673249848beca43ac405b8102ec90dd5f22ca513c0614156103c05750737cf8a6090a9053b01f3df4d4e6cfedd8c90d9027919050565b60405162461bcd60e51b81526020600482015260136024820152724173736574206e6f7420617661696c61626c6560681b60448201526064016100ab565b919050565b60008061040f83610542565b90506000816040516020016104249190610702565b60405160208183030381529060405280519060200120905060405160200161045790644441492e6560d81b815260050190565b604051602081830303815290604052805190602001208114806104a3575060405165555344432e6560d01b60208201526026016040516020818303038152906040528051906020012081145b806104d55750604051635553444360e01b60208201526024016040516020818303038152906040528051906020012081145b80610509575060405165555344542e6560d01b60208201526026016040516020818303038152906040528051906020012081145b806101e85750604051631554d11560e21b6020820152602401604051602081830303815290604052805190602001208114949350505050565b60606000826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561057f57600080fd5b505afa158015610593573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105bb9190810190610605565b9392505050565b805169ffffffffffffffffffff811681146103fe57600080fd5b6000602082840312156105ee57600080fd5b81356001600160a01b03811681146105bb57600080fd5b60006020828403121561061757600080fd5b815167ffffffffffffffff8082111561062f57600080fd5b818401915084601f83011261064357600080fd5b8151818111156106555761065561074e565b604051601f8201601f19908116603f0116810190838211818310171561067d5761067d61074e565b8160405282815287602084870101111561069657600080fd5b6106a783602083016020880161071e565b979650505050505050565b600080600080600060a086880312156106ca57600080fd5b6106d3866105c2565b94506020860151935060408601519250606086015191506106f6608087016105c2565b90509295509295909350565b6000825161071481846020870161071e565b9190910192915050565b60005b83811015610739578181015183820152602001610721565b83811115610748576000848401525b50505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220bcb127954ea9ada2e2584387e71443dceddd37d949aacc86fd888869d655ef3364736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "price(address)": {
        "params": {
          "asset": "address of the asset"
        },
        "returns": {
          "_0": "uint256 USD price of 1 of the asset, in 8 decimal fixed"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "price(address)": {
        "notice": "Returns the total price in 8 digit USD for a given asset."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}